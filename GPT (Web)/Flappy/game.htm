<!DOCTYPE html>
<html lang="en" dir="ltr">
	<head>
		<title>Flappy Bird Clone - By Morgan Evans</title>
		<meta charset="UTF-8" />
		<style type="text/css">
			canvas#gc	{
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				border: 4px solid black;
				border-radius: 4px;
			}
		</style>
		<script>
			var gc = gcc = null;
			var bird = null;
			var gravity_speed = 0.25;
			var max_velocity = 12;
			var min_velocity = -12;
			var thrust_speed = 0.5;
			var thrusting = false;
			var scroll_speed = 2;
			var wait_time = 105;
			var pillars = [];
			var margin = 128;

			function initGame() {
				gc = document.getElementById("gc");
				gcc = gc.getContext("2d");
				startGame();
			}

			function startGame() {
				for (var i = 0; i < 3; i++) {
					var pillar = new Pillar();
					pillar.init(wait_time * i);
					pillars.push(pillar);
				}

				bird = new Bird();
				window.setInterval(drawGame, 1000/60);
			}

			function gameOver() {
				window.setInterval(null);
			}

			function Bird() {
				this.y = gc.height / 2;
				this.x = gc.width / 8;
				this.velocity = 0;
				this.lives = 3;
				this.score = 0;

				this.thrust = function() {
					this.velocity -= thrust_speed;
					if (this.velocity < min_velocity) this.velocity = min_velocity;
				}

				this.move = function() {
					this.velocity += gravity_speed;
					if (this.velocity > max_velocity) this.velocity = max_velocity;
					this.y += this.velocity;
					if (this.y > gc.height + 10 || this.y < -10) this.die();
				}
				
				this.die = function() {
					if (this.lives > 0) {
						this.y = gc.height / 2;
						this.x = gc.width / 8;
						this.velocity = 0;
						this.lives--;
					} else gameOver = true;
				}
			}

			function Pillar() {
				this.init = function(alt_wait_time = 0) {
					this.x = gc.width;
					this.top = margin + Math.floor(Math.random() * ((gc.height - margin) * 0.75));
					var bottom_margin = this.top + margin;
					var space_left = gc.height - bottom_margin;
					this.bottom = space_left > 0 ? bottom_margin + Math.floor(Math.random() * space_left) : gc.height;
					this.width = 32;
					this.wait = alt_wait_time >= 0 ? alt_wait_time : wait_time;
				}

				this.move = function() {
					if (this.wait <= 0) {
						this.x -= scroll_speed;
						if (this.x + this.width < 0) this.init(-1);
					} else this.wait--;
				}
			}

			function keyPressed(evt) {
				switch (evt.keyCode) {
					case 32 : thrusting = true; break;
				}
			}

			function keyReleased(evt) {
				thrusting = false;
			}

			function drawGame() {
				gcc.fillStyle="black";
				gcc.fillRect(0, 0, gc.width, gc.height);
				gcc.fillStyle="white";
				gcc.fillRect(bird.x - 10, bird.y - 10, 20, 20);
				bird.move();
				if (thrusting) bird.thrust();
				gcc.fillStyle = "red";
				for (var i = 0; i < pillars.length; i++) {
					pillars[i].move();
					if (pillars[i].wait <= 0) {
						gcc.fillRect(pillars[i].x, 0, pillars[i].width, pillars[i].top);
						gcc.fillRect(pillars[i].x, pillars[i].bottom, pillars[i].width, gc.height - pillars[i].bottom);
					}
				}
			}

			document.addEventListener("keypress", keyPressed);
			document.addEventListener("keyup", keyReleased)
		</script>
	</head>
	<body onload="initGame()">
		<canvas id="gc" width="400" height="600"></canvas>
	</body>
</html>